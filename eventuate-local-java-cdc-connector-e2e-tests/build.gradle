apply plugin: DockerServicesPlugin
apply plugin: PublicModulePlugin
apply plugin: 'docker-compose'

dependencies {
    //compile project (":eventuate-cdc-common-e2e-tests")
    compile "$group:eventuate-cdc-common-e2e-tests:$version"
    //compile project (":eventuate-local-java-cdc-connector-common")
    compile "$group:eventuate-local-java-cdc-connector-common:$version"
    testCompile "io.eventuate.messaging.kafka:eventuate-messaging-kafka-spring-common:$eventuateMessagingKafkaVersion"
    testCompile "io.eventuate.common:eventuate-common-spring-jdbc:$eventuateCommonVersion"
    testCompile "junit:junit:4.11"
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

test {
    forkEvery 1
}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_ACTIVE_MQ_VERSION", eventuateActiveMQImageVersion
    environment.put "EVENTUATE_RABBIT_MQ_VERSION", eventuateRabbitMQImageVersion

    removeOrphans = true

    eventuatelocalcdc {
        projectName = null
        removeContainers = project.ext.removeContainers
        upAdditionalArgs = ['--no-deps']
        useComposeFiles = ["../${databaseDockerFile}", "../${databaseDockerCdcFile}"]
        if (mode != "unified") {
            startedServices = project.ext.composeStartedServices()
        }
    }
}

test.dependsOn(eventuatelocalcdcComposeUp)
